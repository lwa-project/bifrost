FROM nvidia/cuda:12.6.3-devel-ubuntu22.04

MAINTAINER Ben Barsdell <benbarsdell@gmail.com>

ARG DEBIAN_FRONTEND=noninteractive

# Accept GPU architectures as a build argument with an empty default
ARG GPU_ARCHS=""

# Get dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        git \
        pkg-config \
        software-properties-common \
        python3 \
        python3-dev \
        python3-pip \
        python-is-python3 \
        pylint \
        doxygen \
        universal-ctags \
        nano \
        vim \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN pip --no-cache-dir install \
        setuptools \
        numpy \
        scipy \
        jupyterlab \
        jupyter_client \
        nbformat \
        nbconvert \
        matplotlib \
        contextlib2 \
        simplejson \
        pint \
        ctypesgen==1.0.2 \
        graphviz \
        sphinx \
        breathe

RUN pip --no-cache-dir install \
        cupy-cuda12x \
        pycuda \
        numba

ENV TERM xterm

# Checkout the code
RUN git clone https://github.com/lwa-project/bifrost

# Build the library
WORKDIR /bifrost
COPY . .
RUN ALL_GPU_ARCHS=$(nvcc -h | grep -Po "'compute_[0-9]{2,3}" | cut -d_ -f2 | sort | uniq | paste -s -d ' ') && \
    if [ -z "$GPU_ARCHS" ]; then \
        echo "No GPU_ARCHS provided, building all avaliable..." && \
        GPU_ARCHS=$ALL_GPU_ARCHS; \
    fi && \
    echo "Building for GPU archs $GPU_ARCHS" && \
    ./configure --with-gpu-archs="$GPU_ARCHS" --with-shared-mem=16384 && \
    make -j && \
    make doc && \
    make install

ENV LD_LIBRARY_PATH /usr/local/lib:${LD_LIBRARY_PATH}

# IPython
EXPOSE 8888

WORKDIR /workspace
RUN ["/bin/bash"]
